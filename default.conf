js_path "/etc/nginx/";
js_import main from encode_url.js;
js_set $encoded_url main.encode_url;

server {
    listen       80;
    server_name  localhost;

    location /auth {
        internal;
        proxy_pass          http://CORE_MANAGER_NAME:CORE_MANAGER_PORT/authenticate;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Auth-Request-Redirect $scheme://$host:$server_port$request_uri;

        proxy_set_header        Content-Length "";
        proxy_pass_request_body off; 
    }
    
    location /login {
        proxy_pass          http://CORE_MANAGER_NAME:CORE_MANAGER_PORT/login;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Auth-Request-Redirect $scheme://$host:$server_port$request_uri;
    }

    location /logout {
        proxy_pass          http://CORE_MANAGER_NAME:CORE_MANAGER_PORT/logout;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Auth-Request-Redirect $scheme://$host:$server_port$request_uri;
    }

    location /api {
        proxy_pass          http://CORE_MANAGER_NAME:CORE_MANAGER_PORT/api;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Auth-Request-Redirect $scheme://$host:$server_port$request_uri;
    }

    location /admin {
        auth_request	/auth;
        error_page 401 = @error401;
                
        proxy_pass          http://CORE_MANAGER_NAME:CORE_MANAGER_PORT/admin;
        proxy_set_header    Host $host;
        proxy_set_header    X-Real-IP $remote_addr;
        proxy_set_header    X-Auth-Request-Redirect $scheme://$host:$server_port$request_uri;
    }

    location /static {
        proxy_pass		    http://CORE_MANAGER_NAME:CORE_MANAGER_PORT;
    }

    location /not_ready {
        proxy_pass		    http://CORE_MANAGER_NAME:CORE_MANAGER_PORT;
    }

    location @error401 {
        return 302 http://$host:$server_port/login?next=$scheme%3A%2F%2F$host%3A$server_port$encoded_url;
    }

    location @error500 {
        return 302 http://$host:$server_port/not_ready?next=$scheme%3A%2F%2F$host%3A$server_port$encoded_url;
    }

    location /websockify {
        auth_request	/auth;
        error_page 401 = @error401;

        proxy_http_version	1.1;
        proxy_set_header	Upgrade $http_upgrade;
        proxy_set_header	Connection "Upgrade";
        proxy_set_header	Host $host;

	    # Timeout. Nginx will otherwise disconnect after < 1min
        proxy_read_timeout	3600s;
        proxy_send_timeout	3600s;

        auth_request_set	$url $upstream_http_x_url;
        proxy_pass		    $scheme://$url;
    }

    location ^~ / {
        auth_request    /auth;
        error_page 401 = @error401;
        error_page 500 502 503 504 = @error500;

        proxy_set_header    X-Real-IP $remote_addr;

        auth_request_set    $url $upstream_http_x_url;
        proxy_pass          $scheme://$url;
    }
}